
开机和关机----------------------------------------------------------------------
shutdown -h now         立刻关机
shutdown -h 1           1分钟后关机
shutdown -r now         现在重新启动计算机
halt                    关机
reboot                  现在重启计算机
sync                    把内存数据同步到硬盘
sync                    把内存数据同步到硬盘


帮助操作-----------------------------------------------------------------------
man ls			显示指令ls的帮助
help cd			获取cd指令的帮助（这是shell内置指令的帮助信息，丰富程度不如man）


监控操作-----------------------------------------------------------------------
top			打开cpu 内存 后台程序监控（类似于任务管理器的监控）
top 然后输入1		监控每一个cpu核心的占用情况


运行级别说明-----------------------------------------------------------------
0	停机模式（开机后切换到0级别会自动关机）
1	单用户（用于找回丢失密码）
2	多用户状态没有网络服务
3	多用户状态有网络服务
4	系统未使用的运行级别，保留给用户使用
5	图形界面
6	系统重启
常用运行级别是3和5,可以指定默认运行级别

指定运行级别-----------------------------------------------------------------
init 3		切换到运行级别3（这时候就没有图形界面了）
init 0		切换到运行级别0（也就是关机）
init 6		切换到运行级别6（也就是重启）
init 5		切换到运行级别5（也就是切换到图形界面）

设置默认运行级别-------------------------------------------------------------
systemctl set-default multi-user.target		将运行级别设为3（多用户状态有网络服务）
systemctl set-default graphical.target		将运行级别设为5（图形化界面）
systemctl get_default				查询当前所在的运行级别


路径 目录操作----------------------------------------------------------------------
pwd			显示当前所在目录的完整路径
cd 地址			打开所在目录（可以是绝对路径或相对路径）
cd ..			返回上一级目录
cd ~			返回当前用户的家目录
ls -a -l		列出当前目录下的文件（-a表示显示隐藏文件 -l表示显示详细信息，可以组合成为-al或-la）
ls -lh			列出当前目录下的文件（-l表示显示详细信息且文件大小方便用户读取）
tree 目录			使用树状的形式显示目录中的文件和文件夹
				没有安装tree指令的可以： yum install tree 安装tree指令
tree 目录 | more		配合more浏览树状图


文件基础操作-----------------------------------------------------------------------
mkdir hello		在当前目录下新建文件夹 hello
mkdir -p src/hello	在当前目录下新建多层文件夹 src/hello
rmdir hello		删除hello这个空目录
touch 文件名		创建一个空文件，例如touch hello.txt

cp a.txt hello/		复制a文件到当前目录下的hello文件夹中去(前提是存在这个文件夹)
cp a.txt /home/st330/	复制a文件到绝对路径/home/std330 这个文件夹中去(前提是存在这个文件夹)
cp a.txt hello		如果当前目录下有hello文件夹，那么a.txt会被复制进这个文件夹里
			如果没有那么会复制a.txt并重命名为hello（不带后缀的文件）
cp a.txt /home/st330	如果绝对路径/home 下有std330这个文件夹，那么会复制a.txt到该文件夹下
			如果没有那么会复制a.txt到/home 并重命名为hello（不带后缀的文件）
cp a.txt b.txt		复制a文件并重命名为b.txt
cp -r hello goodbye	复制hello整个文件夹，如果当前目录下有goodbye文件夹，那么hello文件夹会复制到goodbye文件夹里面
			如果当前目录下没有goodbye文件夹，那么hello文件夹会在当前目录下复制一份并重命名为goodbye文件夹
cp -r hello /home/std330/goodbye	
			同理只不过是绝对路径(注意-r在debian是自动覆盖原文件的！！)

rm -r 地址		删除该地址下的所有文件
rm -f 地址		强制删除该文件且不提示
rm -rf hello		删除hello这个目录及其目录下的所有文件，且不提示

mv b.txt c.txt		重命名b文件改为c.txt
mv b.txt /root/		移动文件到/root/路径下
mv b.txt /root/a.txt	移动文件到/root/路径下并重命名为a.txt
mv b.txt hello		如果当前目录下有hello文件夹，那么b.txt会被移动到文件夹里面
			如果不存在hello文件夹，那么会视为重命名操作，即b.txt会被重命名为hello
mv b.txt /home/std330	同理（只不过是绝对路径）
mv hello goodbye	如果hello是文件夹且当前目录下没有goodbye文件夹，那么文件夹会重命名为goodbye
			如果hello是文件夹但当前目录下有goodbye文件夹，那么文件夹会整体移动到goodbye文件夹下
mv hello /home/std330/goodbye
			同理只不过是绝对路径


查看文件操作-------------------------------------------------------------------------------------
cat 文件名		查看文件（无法修改文件）
cat -n 文件名		查看文件且显示行号（无法修改文件）
cat -n 文件名 | more	查看文件且显示行号，并结合more指令来浏览文件（所有cat指令都无法修改文件）
			在结合more使用的时候有很多快捷键帮助我们浏览文件（在下面介绍，因为more可以单独使用，也可以跟cat一起配合使用）

more 文件名		查看文件（加载整个文件后浏览）
		空格	向下翻一页
		enter	向下翻一行
		q	退出，不再显示文件内容
		ctrl+F	向下滚动一屏
		ctrl+B	返回上一屏
		=	输出当前行号
		:f	输出文件夹名和当前行号（使用管道符配合cat使用时无法显示文件名）
less 文件名		查看文件（根据浏览位置，逐步加载文件）
		空格	向下翻页
		pagedown向上翻页
		pageup	向下翻页
		/字串	向下查找字串，n向下查找，N向上查找
		?字串	向上查找字串，n向上查找，N向下查找
		q	退出，不再显示内容

head 文件名		输出文件的开头到控制台（默认是前10行）
head -n 5 文件名	显示文件开头5行的内容到控制台
tail 文件名		输出文件的结尾到控制台（默认是前10行）
tail -n 9 文件名	显示文件结尾9行的内容到控制台
tail -n +12 文件名	显示从第12行及以后的所有行
tail -f 文件名		实施追踪文档的所有更新


输出内容-------------------------------------------------------------------------
echo 内容		输出内容到控制台
echo $PATH		输出环境变量到控制台
echo $HOSTNAME		输出主机名到控制台

>指令			将输出重定向到目标文件（覆盖模式）
>>指令			将输出重定向到目标文件（追加模式）
ls -l >文件名		将当前目录下的文件详细信息覆盖到文件中
ls -al >>文件名		将当前目录下的文件详细信息追加到文件中
cat 文件1 > 文件2	将文件1的内容覆盖到文件2中去
echo “内容” > 文件	将内容追加输出到文件中去
cat a.txt | tail -n +10 | head -n 15 >> b.txt 	将a.txt文件的第10-25行追加写到b.txt文件中


软链接（快捷方式）-------------------------------------------------------------------
ln -s 原文件 软链接名	建立一个符号链接，类似与windows里的快捷方式
			这样的链接可以是文件/文件夹
ln -s /root /home/myroot	cd myroot就相当于打开了root目录
rm myroot		删除软链接


历史记录----------------------------------------------------------------------------
history			查看所有执行过的指令
history 12		查看最近的12条指令
history -c		清空历史记录
!135			执行历史记录中编号为135的指令


时间日期-----------------------------------------------------------------------------
date			显示当前时间
date +%Y		显示当前年
date +%m		显示当前月份
date +%d		显示当前天
date "+%Y-%m-%d %H:%M:%S"	显示当前年月日时分秒
			这里的双引号和加号是必须写的，后面的%m就类似于c++的printf里的%d 可以随意组合
date "+%m %M %S"	显示月 分 秒

date -s "2020-11-03 20:02:10"	设置时间为2020.11.3 .....

cal			显示本月日历
cal 2020		显示2020年的日历


搜索查找文件-------------------------------------------------------------------------------
find 目录 选项 文件名	在指定目录中搜索文件
				选项可以是按名称查找-name （名称必须是全称）
				查找指定用户名的所有文件-user 
				按照指定大小查找文件-size
find /home -name linux_use.txt	在home目录下按照名字搜索linux_use.txt文件
find /home -name *.txt		在home目录下按照名字搜索所有txt文件
find /home -user std330		查找在home目录下的用户名称为std330的文件
find /home -user std330 |more	配合more指令可以更方便的浏览搜索到的文件
find /home -size +200M		表示查找home目录下的所有大小大于200M的文件
					+表示大于该大小 -为小于 n为等于
					k表示KB M表示MB G表示GB
find /home -size -10k |more	同理

locate	文件名		快速查找文件（其本质是在数据库中查找文件，而不是逐目录检索,所以每次搜索前要用updatedb更新数据库）
updatedb		更新搜索文件数据库


搜索查找指令 文件内容----------------------------------------------------------------------
which 指令名		查找指令在哪个目录下
which man		查看man指令所在的目录

grep 选项 查找内容 源文件	在文件中查找内容所在的行显示到控制台
			选项可以是-n显示行号 -i忽略字母大小写
grep -n “ls” /home/std330/mytemp/linux_use.txt	显示linux_use.txt文件中带有ls的行，并输出到控制台

管道符-------------------------------------------------------------------------------------
| 			管道符表示把前面指令的结果传递给后面一个指令处理
cat -n a.txt | more	这里就表示将cat输出的a.txt的内容输出给more指令处理
cat -n a.txt | grep "hello"	这里就表示将cat输出的a.txt的内容输出给grep指令处理（查找文件中含有hello的行）

压缩和解压---------------------------------------------------------------------------------
gzip 文件名		压缩文件，压缩为.gz文件，压缩后源文件会删除（只能用于文件，不能用于文件夹）
gunzip 文件名.gz	解压文件，解压后源文件会删除

zip 选项 XXX.zip 打包的内容	压缩文件或文件夹为.zip文件(压缩后源文件不会删除）
			常用选项 -r 递归压缩，即把整个文件夹包含其中的所有内容都压缩到.zip文件中
			（如果不加-r来压缩文件夹，那么只是压缩了一个空文件夹。所以不加-r一般只用来压缩单个文件）
zip -r multi.zip lindir/llin/ lindir/wind.txt	zip命令可以对多个文件进行压缩
			这里就是把lindir/llin这个文件夹及其内容 和 lindir/wind.txt文件一起压缩到multi.zip文件中
			如果对multi.zip文件进行解压，那么会出现一个lindir的文件夹，里面包含wind.txt和llin文件夹（及其内容）
unzip 选项 XXX.zip	解压缩.zip文件
			常用选项 -d 目录 将文件解压到目录中去

tar 选项 XXX.tar.gz 打包的内容	根据选项的不同压缩或是解压缩
			常用选项
			-v 显示详细信息
			-c 产生.tar打包文件（x和c只能存在一个）
			-x 解包.tar文件（x和c只能存在一个）
			-z 使用gzip来压缩/解压（用gzip压缩的文件必须用gzip解压）
			-j 使用bzip2来压缩/解压 （用bzip2压缩的文件必须用bzip2解压）
			-f 指定压缩后的文件名 或要解压或解包的文件名（这个选项要卸载最后）
tar -cvf XXX.tar ......		仅打包不压缩（建议将文件名指定为.tar防止混淆）由于没有压缩所以文件较大
tar -zcvf XXX.tar.gz ......	打包后用gzip压缩（建议将文件名指定为.tar.gz防止混淆）
tar -jcvf XXX.tar.bz ......	打包后用bzip2压缩（建议将文件名指定为.tar.bz防止混淆）
tar -xvf XXX.tar 		解包.tar文件
tar -zxvf XXX.tar.gz		使用gzip解压并解包.tar.gz文件
tar -jxvf XXX.tar.bz		使用bzip2解压并解包.tar.bz文件
tar -cvf done.tar dir1 dir2 a.txt	将dir1文件夹及其内容，dir2文件夹及其内容，a.txt打包到done.tar文件中（仅打包不压缩）

