

任务调度基本指令--------------------------------------------------------------------------
crontab -e		编辑定时任务
crontab -l		查询当前用户的crondtab定时任务
crontab -r		删除当前用户的所有crondtab定时任务
service crond restart	重启任务调度

单行命令的任务调度--------------------------------------------------------------------------
*/1 * * * * echo "hello this is crondtab" >> /home/std330/mytemp/hello.cpp
	前面5个位置分别表示分钟，小时，天，月，星期几。其中*表示每一分钟，小时，天......
	这里表示每分钟运行一次：echo "hello this is crondtab" >> /home/std330/mytemp/hello.cpp 这条指令
特殊符号说明：
	* 表示任何时间
	*/n 表示每隔多久就运行一次
	, 表示不连续的时间（比如在8点12点15点各运行一次，0 8,12,15 * * * ......）
	- 表示连续的时间 （比如周一到周五都执行，0 8 * * 1-5 ......）
假如我想在每周一到周五的早上8点和早上11点每10分钟执行一次，那么就写成：
	*/10 8,11 * * 1-5 echo "hello.." >> /home/std330.......

通过脚本执行任务调度-------------------------------------------------------------------------
vi mytask.sh		建立脚本文件
			修改文件内容，把要执行的指令都输入到文件中去
chmod u+x mytask.sh	确保该文件有执行权限
crontab -e		修改crond任务调度
*/1 * * * * /home/std330/mytemp/mytask.sh	让mytask.sh脚本文件每分钟执行一次

定时任务---------------------------------------------------------------------------------------
sudo apt-get install at	安装at（在debian系统中）
ps -ef |grep atd	检查atd这个程序是否在后台运行(atd会每分钟检查是否有新的定时任务，如果有那么执行）
atq			查看系统中没有执行的任务
atrm 编号		删除系统中已经设置的任务（根据编号）
at 选项 时间		输入指令后回车会进入任务输入状态，使用ctrl+D 结束at命令的输入（连续按两次结束输入）
			选项：
				-m 指定任务完成后会给用户发送邮件，即使没有标准输出
				-I atq的别名
				-d atrm的别名
				-v 显示任务将被执行的时间
				-c 打印任务内容到标准输出
				-V 显示版本信息
				-q <队列> 使用指定的队列
				-f <文件> 从指定的文件读入任务而不是从标准输入读入
				-t <时间参数> 以时间参数的形式提交要运行的任务
			指定时间的方法：
				1,当天时间，例如：04:10
				2,使用词语描绘，例如：midnight noon teatime
				3,采用12小时制，后面加am pm表示上午下午，例如：12pm
				4,指定具体的时间，例如：04:10 2025-04-1
				5,相对时间，使用格式：now+count 时间单位,例如：now + 5 minutes 单位可以是minutes hours days weeks
				6,直接使用today tomorrow 来指定完成命令的时间
at 5pm + 2 days		2天后的下午五点执行任务
at 5pm tomorrow		明天下午五点执行任务
at now + 2 minutes	2分钟后执行任务


