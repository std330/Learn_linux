指令			功能

开机和关机----------------------------------------------------------------------
shutdown -h now		立刻关机
shutdown -h 1		1分钟后关机
shutdown -r now		现在重新启动计算机
halt			关机
reboot			现在重启计算机
sync			把内存数据同步到硬盘
sync			把内存数据同步到硬盘

切换用户----------------------------------------------------------------------
su - root		切换到root用户（根目录切换到其他用户不需要密码）
su - tom		切换到用户tom
logout			注销用户(并回退到上一个用户，当无法再回退时退出系统,注意用户登陆之间可以套娃）
exit			注销用户(并回退到上一个用户，当无法再回退时退出系统,注意用户登陆之间可以套娃）

用户管理----------------------------------------------------------------------
useradd tom		添加用户tom   在debian中使用adduser替换useradd
useradd -d 地址 tom	添加用户tom 并指定用户的家目录地址   在debian中使用adduser替换useradd
passwd tom		修改tom用户的密码
userdel tom		删除用户tom,但保留用户的家目录
userdel -r tom		删除用户tom,且删除用户的家目录(慎重)

用户信息查询------------------------------------------------------------------
id tom			查询用户tom的gid,uid,所在的组
whoami			查询当前用户信息
who am i		查询最初登陆的用户信息（这个debian似乎不支持？）

用户组------------------------------------------------------------------------
groupadd yw		新增加一个组，组名叫做yw
groupdel yw		删除组名为yw的组
useradd -g yw tom	将添加一个新用户tom,将tom添加到组名为yw的组中去，yw组已存在
usermod -g yw tom	将用户tom的组修改为yw（似乎修改用户的组之后，用户创建的文件会自动跟着用户的组修改）
usermod -d /home/std330/mytemp std330	修改用户登陆的初始目录（用户需要进入该目录的权限）
usermod -aG sudo tom	将tom用户附加到sudo组中（表示所在组不变，但是他也属于sudo组）

用户和组的相关文件--------------------------------------------------------------
/etc/passwd 文件    包含了用户的配置文件和各种信息
	每行的含义是	用户名：口令：用户标识号：组标识号：注释性描述：主目录：登陆shell（shell是来解析命令的，例如cd指令）
/etc/shadow 文件    口令的配置文件
	每行的含义是	登陆名：加密口令：最后一次修改时间：最小时间间隔：最大时间间隔：警告时间：不活动时间：失效时间：标志
/etc/group 文件	    包含了组的配置文件
	每行的含义是	组名：口令：组标识号：组内用户列表

文件的所有者/所在组--------------------------------------------------------------------
ls -l			列出当前目录下的文件详细信息
ls -alh			列出当前目录下的文件详细信息（包括隐藏文件，且自动设置文件大小的显示单位）
			例如 -rw-r--r-- 1 std330 std330    99  7月29日 08:45 hello.cpp
			这里的第一个std330 就是指的文件所有者是std330

chown 用户名 文件名/目录名		修改文件的所有者(修改所有者必须是root用户才能修改)
chown std330 a.txt			将a.txt文件的所有者改成std330这个用户（这个用户必须存在）
chown 用户名:所在组 文件名/目录名	修改文件的所有者和所在组
chown std330:grraphic a.txt		所有者修改为std330 所在组修改为grraphic
chown -R 用户名:所在组 目录名		递归修改该目录下的所有文件/目录的所有者和所在组
chgrp 组名 文件名/目录名		修改文件的所在组（必须是root用户才能修改）
chgrp graphic a.txt			将a.txt文件的所在组改成graphic这个组（这个组必须存在）
chgrp -R grraphic temp			将temp文件夹中所有的文件都修改所在组为grraphic（递归修改）

文件权限--------------------------------------------------------------------------------
-rw-r--r-- 1 std330 std330   99  7月29日 08:45 hello.cpp
-rw-r--r-- 1 std330 std330  12K  7月30日 13:57 linux_basic_use.txt
-rw-r--r-- 1 std330 std330 1.2K  7月26日 19:12 vi_use.txt
这里-rw-r--r--就说明了文件的权限，
	第0位	-表示是普通文件
		l表示是链接文件（相当于快捷方式）
		d表示是目录（相当于文件夹）
		c表示是字符设备文件/鼠标/键盘
		b表示是块设备，例如硬盘
	第1-3位	表示文件所有者对该文件的权限
		r表示有读取权限
		w表示有写入权限
		x表示有运行权限
	第4-6位	表示文件所在组的用户对该文件的权限
		rwx同上
	第7-9位	表示其他用户对该文件的权限	
		rwx同上
这里1表示该文件是个普通文件，如果该文件是目录，那么该数字就表示该目录下有几个子目录（包括了.和..）
	例如	drwxr-xr-x 4 std330 std330 4096  8月 1日 11:09 mytemp 这里就表示对于mytemp这个目录里面有2个子文件夹还有两个是.和..
这里第一个std330表示文件所有者
这里第二个std330表示文件所在组
这里99表示文件大小是99字节（12k就是12kib）
这里7月29日 08:45 表示最后修改的日期
最后 hello.cpp 表示的是文件名

rwx详解
	对文件的权限：	
		r表示可以读取，查看文件内容
		w表示可以修改文件内容，但是对文件的删除，移动，重命名操作不一定有权限（该权限是由文件所在目录决定）
		x表示可以执行该文件
	对目录的权限
		r表示可以读取查看目录内的内容，即可以用ls列出目录内容
		w表示可以对目录内的文件进行创建操作，删除操作，重命名操作,并不代表可以修改文件内容（目录本身的重命名操作取决于上一级目录的权限）
		x表示可以进入到该目录,如果内部文件权限允许，那么可以修改文件内容
			（只有r那么只能ls查看文件列表但不能进入目录，只有x那么只能进入目录修改文件但不能列出所有文件）
	rwx权限也可以用数字表示，其中r=4,w=2,x=1,所以rwx三个权限都有就用7表示 如果只有rw权限就是6 只有rx权限就是5
rwx权限常用组和：
	对文件：
		7可读写执行，6可读写，4可读，1可执行
		7可读写进入，5可读进入
		文件内的读写执行由文件自己的权限决定，但文件自己的删除重命名移动权限是由上一级目录的权限决定
		
修改文件权限----------------------------------------------------------------
chmod 权限 文件/目录名	这里权限通过+ - = 来变更，修改权限的主题可以是 u文件所有者 g文件所在组 o其他人 a所有人
chmod u=rwx,g=rx,o=r a.txt	表示文件所有者权限是rwx,文件所在组权限是rw,其他人权限是r
chmod o+w a.txt		表示给其他人赋予w这个权限
chmod a-x a.txt		表示给所有人移除x这个权限
chmod g-rwx temp	表示移除所在组所有的权限
chmod 权限数字 文件/目录名	通过数字表示的权限来修改文件/目录的权限
chmod 751 a.txt		就相当于chmod u=rwx,g=rx,o=x a.txt
chmod 735 a.txt		就相当于chmod u=rwx,g=wx,o=rx a.txt


